C++ Standard Library : STL

    전세계 C++ 천재들이 C++.iso
    자주 사용하는 알고리즘과 자료구조

    단점 : 어려움

    구성

        컨테이너(Container)
            자료구조 템플릿

        반복자(Iterator)
            포인터 객체: 원소를 가리키는 포인터
            ++ != ==
            itr->begin()
            itr->end()

        알고리즘(Algorithm)
            상상가능한 대다수의 계산

string str;

basic_string<char, char_traits<char>, allocator<char>> str;

char 리터럴
    ''

wchar_t 리터럴
    L''

...님이 .성 ... 를 강화 성공!

닉네임  레어도  아이템이름

-----------------------------------------------

STL

Container

    vector(벡터)
        - 배열의 크기(size)와 원소들의 집합(pointer)
        - 원소들의 시퀀스는 0 ~ size-1 인덱스로 접근
            첨자 연산자 []

Old
C++ 11 -- 대격변 패치
Modern C++

for( e : v)         : 범위 기반 반복

    for(auto& e : v)
    {

    }

     for(const auto& e : v)
    {
        
    }
auto                : 컴파일러가 추론할 수 있는 타입

Lambda Expression : 람다식

알고리즘에 사용할 수 있는 연산
    Function
    Lambda Expression
    Functor     ( operator() overloading )
    Predicate
        bool operator () ( )

[2:3]
    2이상 3이하
(2:3)
    2초과 3미만
[0:size)
0 ~ size-1

Iterator
    포인터 오브젝트
    컨테이너 내부에 선언되어 있음
    [begin, end)

    int [5];
    0; i<5;

Algorithm


------------------------------------------------------------------

시퀀스 컨테이너(Sequence Container)
    원소들이 순서대로 나열
    std::array
        Random Access
        Fixed Size
    std::vector
        Random Access
        Dynamic Size

    std::forward_list
        Sequential Access : Random Access X
        Dynamic Size
    std::list
        Double Linked List
    std::deque
        Double Ended QUEue (데크)
        Random Access

연관 컨테이너(Associative Container)
    원소들이 앞뒤, 상하, 좌우 어디로든 연관성에 따라 연결 되어 있는 방식
    Binary Search Tree ( BST )
    Hash
    std::set
        고유한 값들이 정렬
        key 값
        std::unordered_set
    std::map
        key <- value
        Dictionary

    std::multiset
        동일한 키가 여러개
        
    std::multimap

컨테이너 어댑터(Container Adapter)
    특수한 목적에 맞게 변형
    std::stack
    std::queue
    std::priority_queue


std::vector
    배열 접근
    데이터가 적은 경우

std::list   (느려요)
    중간에서 삭제가 잦은 경우
    데이터가 적은 경우

std::map
    검색이 필요
    데이터가 많은 경우


STL 구성
    컨테이너
        원소 관리
    이터레이터
        위치
    알고리즘
        연산

    erase(remove_if : 알고리즘) 컨테이너

    특정 동적 배열 크기
        검색 O(n)
        배열 사이즈 조절 O(n)
            복사 O(n)
        O(n + n^2) 

    erase(remove_if : 알고리즘) 컨테이너
        remove : O(n)
        erase : O(n)
        O(2n)


